{"version":3,"file":"bundle.js","sources":["../src/charts/utils.ts","../src/charts/Bar.ts","../src/demo.ts"],"sourcesContent":["/**\n * 获取 element 的 content 宽度\n * @param element \n */\nexport function getElementContentWidth(element: Element): number {\n\tconst styles = window.getComputedStyle(element);\n\tconst padding = parseFloat(styles.paddingLeft) + parseFloat(styles.paddingRight);\n\treturn element.clientWidth - padding;\n}\n\n/**\n * 保留两位小数\n * @param number\n */\nexport function floatTwo(number: number) {\n\treturn parseFloat(number.toFixed(2));\n}","import { getElementContentWidth, floatTwo } from \"src/charts/utils\";\n\n/**\n * 分层的解耦思想\n * 数据层 (可以更换算法) -> 渲染层 (可以更换渲染方式)\n * 好处，方便兼容与替换，方便测试\n * 坏处，自制驱动引擎？动画\n */\n\nconst DEFAULT_HEIGHT = 240;\n\n/**\n * 根据最大最小值确定分度，原来代码这部分做得太啰嗦\n * 问题抽象，在已知最大值与最小值的情况下，不限制间隔与数量的情况下，如何让坐标轴刻度尽可能美观\n * G2 实现也很啰嗦 https://github.com/antvis/g2/blob/724872cee56d7e731b1d945444b7b10d4d0ef2e8/src/scale/auto/number.js\n * 想到一个 简单方法，最大值 - 最小值差值 / 4 向上取整数量级\n * @param maxValue \n * @param minValue \n */\nfunction calcIntervals(maxValue: number, minValue: number): number[] {\n  const ticks = [];\n  // 始终以 0 为基准，\n  const diff = minValue > 0 ? maxValue : maxValue - minValue;\n  const initInterval = diff / 5;\n  const exp = Math.floor(Math.log10(initInterval));\n  const finalInterval = Math.ceil(initInterval / Math.pow(10, exp)) * Math.pow(10, exp);\n\n  let downCount = 0;\n  while (0 - downCount * finalInterval >= minValue) {\n    ticks.unshift(0 - downCount * finalInterval);\n    downCount++;\n  }\n  if (minValue <= 0) {\n    ticks.unshift(0 - downCount * finalInterval);\n  }\n  let upCount = 0;\n  while (0 + upCount * finalInterval <= maxValue) {\n    if (!(ticks[ticks.length - 1] === 0 && 0 + upCount * finalInterval === 0)) {\n      ticks.push(0 + upCount * finalInterval);\n    }\n    upCount++;\n  }\n  if (maxValue >= 0) {\n    ticks.push(0 + upCount * finalInterval);\n  }\n\n  return ticks;\n}\n\n// console.log(calcIntervals(200, 20));\n// console.log(calcIntervals(-100, -1000));\n\ninterface Data {\n  labels: string[],\n  datasets: Array<{\n    title: string,\n    values: number[],\n  }>,\n}\n\ninterface BarChartConfig {\n  /** 外部容器 */\n  parent: string | Element;\n  /** 图表高度 */\n  height?: number;\n  /** 图表数据 */\n  data?: Data;\n}\n\nclass XAxis {\n  /** 单元宽度 */\n  unitWidth: number;\n  /** 每个单元的起始位置 */\n  startPosList: number[];\n}\n\nclass YAxis {\n  /** 分度值 */\n  ticks: number[];\n}\n\nclass BarChart {\n  data: Data;\n  config: BarChartConfig;\n  parent: Element;\n\n  width: number;\n  height: number;\n\n  xAxis: XAxis = new XAxis();\n  yAxis: YAxis = new YAxis();\n\n  constructor(config: BarChartConfig) {\n    this.config = config;\n    this.calculate();\n    this.render();\n  }\n\n  /**\n   * 计算模块\n   */\n  calculate() {\n    this.getSize();\n    this.getAxis();\n  }\n\n  /**\n   * 渲染模块\n   */\n  render() {\n\n  }\n\n  /**\n   * 设置图表大小，可抽象为 Base\n   */\n  getSize() {\n    if (typeof this.config.parent === 'string') {\n      this.parent = document.querySelector(this.config.parent);\n    } else {\n      this.parent = this.config.parent;\n    }\n    this.width = getElementContentWidth(this.parent);\n    this.height = DEFAULT_HEIGHT;\n  }\n\n  /**\n   * 设置坐标轴大小，可抽象为 Axis\n   */\n  getAxis() {\n    this.data = this.config.data;\n\n    // x 轴\n    this.xAxis.unitWidth = this.width / this.data.labels.length;\n    this.xAxis.startPosList = this.data.labels.map((label, i) => {\n      return floatTwo(i * this.xAxis.unitWidth);\n    });\n\n    // y 轴\n    // 合并所有 y 值，求解最大、最小值\n    const allValues = this.data.datasets.reduce((pre, dataset) => {\n      return [ ...pre, ...dataset.values ];\n    }, []);\n\n    const maxValue = Math.max(...allValues);\n    const minValue = Math.min(...allValues);\n\n    this.yAxis.ticks = calcIntervals(maxValue, minValue);\n  }\n}\n\nexport default BarChart;\n\n","import Chart from './index';\nimport BarChart from './charts/Bar';\n\nconst data = {\n  labels: [\n    '12am-3am',\n    '3am-6pm',\n    '6am-9am',\n    '9am-12am',\n    '12pm-3pm',\n    '3pm-6pm',\n    '6pm-9pm',\n    '9am-12am'\n  ],\n  datasets: [\n    {\n      title: 'Some Data',\n      values: [25, 40, 30, 35, 8, 52, 17, -4]\n    },\n    {\n      title: 'Another Set',\n      values: [25, 50, -10, 15, 18, 32, 27, 14]\n    },\n    {\n      title: \"Yet Another\",\n      values: [15, 20, -3, -15, 58, 12, -17, 37]\n    }\n  ]\n};\n\n/*\nconst chart = new Chart({\n  parent: 'line',\n  title: 'My Chart',\n  data: data,\n  type: 'line', // or 'line', 'scatter', 'pie', 'percentage'\n  height: 250,\n  colors: ['#7cd6fd', '#743ee2']\n});\n*/\n\nconst chart = new BarChart({\n  parent: document.getElementById('barchart'),\n  height: 400,\n  data,\n});"],"names":[],"mappings":"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"}