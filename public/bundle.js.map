{"version":3,"file":"bundle.js","sources":["../src/charts/utils/draw.ts","../src/charts/BaseChart.ts","../src/charts/AxisChart.ts","../src/charts/Line.ts","../src/index.ts","../src/charts/utils.ts","../src/charts/Bar.ts","../src/draw.ts","../src/charts/Scatter.ts","../src/charts/baseChart.ts","../src/charts/Pie.ts","../src/demo.ts"],"sourcesContent":["function $(expr: string, con?: HTMLElement) {\n  return typeof expr === 'string'\n    ? (con || document).querySelector(expr)\n    : expr || null;\n}\n\nexport const createSVG = (tag: string, o: any) => {\n  var element = document.createElementNS('http://www.w3.org/2000/svg', tag);\n\n  for (var i in o) {\n    var val = o[i];\n\n    if (i === 'inside') {\n      $(val).appendChild(element);\n    } else if (i === 'around') {\n      var ref = $(val);\n      ref.parentNode.insertBefore(element, ref);\n      element.appendChild(ref);\n    } else if (i === 'styles') {\n      if (typeof val === 'object') {\n        Object.keys(val).map((prop: any) => {\n          element.style[prop] = val[prop];\n        });\n      }\n    } else {\n      if (i === 'className') {\n        i = 'class';\n      }\n      if (i === 'innerHTML') {\n        element['textContent'] = val;\n      } else {\n        element.setAttribute(i, val);\n      }\n    }\n  }\n\n  return element;\n};\n\nexport const createDrawAreaComponent = (\n  parent: SVGElement,\n  className: string,\n  transform = ''\n) => {\n  return createSVG('g', {\n    className: className,\n    inside: parent,\n    transform: transform\n  });\n};\n\nexport function makeYLine(\n  startAt: number,\n  width: number,\n  textEndAt: number,\n  point: number | string,\n  yPos: number,\n  darker = false,\n  lineType = ''\n) {\n  let line = createSVG('line', {\n    className: lineType === 'dashed' ? 'dashed' : '',\n    x1: startAt,\n    x2: width,\n    y1: 0,\n    y2: 0,\n    stroke: '#dadada'\n  });\n\n  let text = createSVG('text', {\n    className: 'y-value-text',\n    x: textEndAt,\n    y: 0,\n    dy: '.32em',\n    innerHTML: point + ''\n  });\n\n  let yLine = createSVG('g', {\n    className: `tick y-axis-label`,\n    transform: `translate(0, ${yPos})`,\n    'stroke-opacity': 1\n  });\n\n  if (darker) {\n    line.style.stroke = 'rgba(27, 31, 35, 0.6)';\n  }\n\n  yLine.appendChild(line);\n  yLine.appendChild(text);\n\n  return yLine;\n}\n\nexport function makeXLine(\n  height: number,\n  textStartAt: number,\n  point: string,\n  xPos: number\n) {\n  let line = createSVG('line', {\n    x1: 0,\n    x2: 0,\n    y1: 0,\n    y2: height,\n    stroke: '#dadada'\n  });\n\n  let text = createSVG('text', {\n    className: 'x-value-text',\n    x: 0,\n    y: textStartAt,\n    dy: '.71em',\n    innerHTML: point\n  });\n\n  let xLine = createSVG('g', {\n    className: `tick x-axis-label`,\n    transform: `translate(${xPos}, 0)`\n  });\n\n  xLine.appendChild(line);\n  xLine.appendChild(text);\n\n  return xLine;\n}\n\nexport function makePath(\n  pathStr: any[],\n  className = '',\n  stroke = 'none',\n  fill = 'none'\n) {\n  return createSVG('path', {\n    className: className,\n    d: pathStr,\n    styles: {\n      stroke: stroke,\n      fill: fill\n    }\n  });\n}\n","/**\n * @file Base chart\n */\nimport { Iargs } from '../index.d';\nimport { createSVG } from './utils/draw';\nimport { createDrawAreaComponent } from './utils/draw';\n\nclass BaseChart {\n  public options:Iargs;  \n  public optionsData:OptionData;\n  public args: Iargs;\n  public title: string;\n  public subTitle: string;\n  public type: 'line' | 'pie' | 'bar' | 'scatter' | 'percentage';\n  public parent: HTMLElement;\n  public chartWrapper: HTMLElement;\n  public chartWidth: number;\n  public chartHeight: number;\n  public svg: SVGElement;\n  public svgDefs: SVGElement;\n  public drawArea: SVGElement;\n  public translateX: number;\n  public translateY: number;\n  constructor(args: Iargs) {\n    this.options = args;\n    this.optionsData = args.data;\n    this.args = args; \n    if (this.options.type!=='pie') {\n      this.setup();\n    }\n  }\n  setup() {\n    this.getValues();\n    this.setMargins();\n    this.initContainer();\n\n    this.initChartArea();\n    this.initDrawArea();\n  }\n  getValues() {\n    const { title, subTitle, parent, height, type } = this.args;\n    this.title = title || '';\n    this.subTitle = subTitle || '';\n    this.parent = typeof parent === 'string' ? document.querySelector(parent) : parent;\n    this.chartWidth = this.parent.getBoundingClientRect().width\n    this.chartHeight = height;\n    this.type = type;\n  }\n  initContainer() {\n    const containerHtml = `<div className=\"chart-container\">\n      <h6 class=\"title\">${this.title}</h6>\n      <h6 class=\"sub-title uppercase\">${this.subTitle}</h6>\n      <div class=\"taco-chart graphics\"></div>\n    </div>`\n    this.parent.innerHTML = containerHtml;\n    this.chartWrapper = this.parent.querySelector('.taco-chart');\n  }\n  setMargins() {\n    this.translateX = 60;\n    this.translateY = 10;\n  }\n  initChartArea() {\n    this.svg = createSVG('svg', {\n      className: 'chart',\n      inside: this.chartWrapper,\n      width: this.chartWidth,\n      height: this.chartHeight\n    });\n    this.svgDefs = createSVG('defs', {\n      inside: this.svg,\n    });\n  }\n  initDrawArea() {\n    this.drawArea = createSVG('g', {\n      className: `${this.type}-chart`,\n      inside: this.svg,\n      transform: `translate(${this.translateX}, ${this.translateY})`\n    });\n  }\n}\n\nexport { BaseChart };\n","/**\n * @file Axis chart\n */\nimport { BaseChart } from './BaseChart';\nimport { Iargs } from '../index.d';\nimport { createDrawAreaComponent, makeYLine, makeXLine } from './utils/draw';\nimport { getStringWidth } from './utils';\nconst Y_AXIS_NUMBER = 6;\n\nclass AxisChart extends BaseChart {\n  public xAxisContainer: SVGElement;\n  public yAxisContainer: SVGElement;\n  public drawHeight: number;\n  public drawWidth: number;\n  public labels: string[];\n  public datasets: object[];\n  public xPositons: number[] = [];\n  public yPositions: number[] = [];\n  public yValues: number[] = [];\n  constructor(args: Iargs) {\n    super(args);\n    const { data } = args;\n    this.labels = data.labels;\n    this.datasets = data.datasets;\n    this.drawHeight = this.svg.getBoundingClientRect().height - (this.translateY * 2);\n    this.drawWidth = this.svg.getBoundingClientRect().width - (this.translateX * 2);\n    this.initAxisContainer();\n    this.createYAxis();\n    this.creteXAxis();\n  }\n  initAxisContainer() {\n    this.xAxisContainer = createDrawAreaComponent(this.drawArea, 'y axis');\n    this.yAxisContainer = createDrawAreaComponent(this.drawArea, 'x axis');\n  }\n  getAllYValues() {\n    let yValues: any[] = [];\n    this.datasets.forEach((dataset: any) => {\n      yValues = yValues.concat(dataset.values);\n    });\n    return yValues;\n  }\n  getYAxisValue() {\n    const yValues = this.getAllYValues();\n    // TODO: 待优化 Y 轴区间\n    // TODO: 待考虑 0 的情况\n    const max = Math.max(...yValues);\n    const min = Math.min(...yValues);\n    const interval = (max - min) / Y_AXIS_NUMBER + 2;\n    const middle = (max + min) / 2;\n    const yAxisValues = [];\n    for (let i = 0; i < Y_AXIS_NUMBER; i++) {\n      const firstValue = middle - interval * 3;\n      const value = firstValue + (interval * i);\n      yAxisValues.push(value);\n    }\n    return yAxisValues;\n  }\n  drawYAxis(value: number, index: number, yPos: number) {\n    const startAt = 6;\n    const interval = this.drawWidth / (this.labels.length - 1);\n    // TODO: 去除 magic number\n    const width = this.chartWidth - interval + 16;\n    const textEndAt = -30;\n    const yLine = makeYLine(startAt, width, textEndAt, value, yPos);\n    this.yAxisContainer.appendChild(yLine);\n  }\n  createYAxis() {\n    const yAxisValues = this.getYAxisValue();\n    const yPosInterval = this.drawHeight / 6;\n    yAxisValues.map((value, index) => {\n      const yPos = this.drawHeight - 20 - (yPosInterval * index);\n      this.yPositions.push(yPos);\n      this.yValues.push(value);\n      this.drawYAxis(value, index, yPos);\n    });\n  }\n  creteXAxis() {\n    const interval = this.drawWidth / (this.labels.length - 1);\n    this.labels.forEach((label, index) => {\n      const xPos = interval * (index) + 15;\n      this.xPositons.push(xPos);\n      this.dragXAxis(label, xPos);\n    });\n  }\n  dragXAxis(label: string, xPos: number) {\n    const textStartAt = this.drawHeight - 9;\n    const xLine = makeXLine(textStartAt, textStartAt, label, xPos);\n    this.xAxisContainer.appendChild(xLine);\n  }\n}\n\nexport { AxisChart };\n","/**\n * @file Line chart\n */\nimport { AxisChart } from './AxisChart';\nimport { Iargs } from '../index.d';\nimport { createDrawAreaComponent, makePath } from './utils/draw';\n\nclass Line extends AxisChart {\n  constructor(args: Iargs) {\n    super(args);\n    this.init();\n  }\n  init() {\n    this.initPathGroup();\n    console.log('line');\n  }\n  initPathGroup() {\n    this.datasets.map((dataset: any, index: number) => {\n      const color = dataset.color || this.args.colors[index % this.args.colors.length];\n      const grouSvg = createDrawAreaComponent(this.drawArea, `path-group path-group-${index}`);\n      const linePath = this.getLinePath(dataset.values, color);\n      grouSvg.appendChild(linePath);\n    });\n  }\n  getYPosition(values: number[]) {\n    const maxYValue = Math.max(...this.yValues);\n    const minYValue = Math.min(...this.yValues);\n    const maxYPosition = Math.max(...this.yPositions);\n    const minYPosition = Math.min(...this.yPositions);\n    const yInterval = (maxYPosition - minYPosition) / (maxYValue - minYValue);\n    return values.map((value: number) => {\n      return minYPosition + ((maxYValue - value) * yInterval);\n    });\n  }\n  getLinePath(values: number[], color: string) {\n    const yPositions: number[] = this.getYPosition(values);\n    let pointsList = yPositions.map((yValue: number, index: number) => {\n      return `${this.xPositons[index]},${yValue}`;\n    });\n    let pointsStr = pointsList.join(\"L\");\n    return makePath(\"M\" + pointsStr, 'line-graph-path', color);\n  }\n}\n\nexport { Line };\n","import { Line } from './charts/Line';\nimport Bar from './charts/Bar';\nimport { Iargs } from './index.d';\n\nexport default class Chart {\n  constructor(args: Iargs) {\n    // 这里初始化对应 Chart\n    switch (args.type) {\n      case 'line': {\n        return new Line(args);\n      }\n      case 'bar': {\n      }\n      case 'pie': {\n      }\n      default:\n        break;\n    }\n  }\n}\n","/**\n * 获取 element 的 content 宽度\n * @param element\n */\nexport function getElementContentWidth(element: Element): number {\n  const styles = window.getComputedStyle(element);\n  const padding =\n    parseFloat(styles.paddingLeft) + parseFloat(styles.paddingRight);\n  return element.clientWidth - padding;\n}\n\n/**\n * 保留两位小数\n * @param number\n */\nexport function floatTwo(number: number) {\n  return parseFloat(number.toFixed(2));\n}\n\n/**\n * Returns pixel width of string.\n * @param {String} string\n * @param {Number} charWidth Width of single char in pixels\n */\nexport function getStringWidth(string: string, charWidth: number) {\n  return (string + '').length * charWidth;\n}\n\n/**\n * dom 方法\n */\nexport const $ = {\n\tselect: (expr: string | Element, con?: Element): Element => {\n\t\treturn typeof expr === \"string\"? (con || document).querySelector(expr) : expr || null;\n\t},\n\t// <T extends keyof HTMLElement>\n\tcreate: (tag: string, options: any): HTMLElement => {\n\t\tconst element = document.createElement(tag);\n\t\tfor (var key in options) {\n\t\t\tconst value = options[key];\n\t\t\tif (key in element) {\n\t\t\t\t(element as any)[key] = value;\n\t\t\t}\n\t\t}\n\t\treturn element;\n\t},\n\tcreateSVG: (tag: string, options: any): SVGElement => {\n\t\tconst element = document.createElementNS(\"http://www.w3.org/2000/svg\", tag);\n\n\t\tfor (var key in options) {\n\t\t\tconst value = options[key];\n\t\t\tif (key === \"className\") {\n\t\t\t\tkey = \"class\";\n\t\t\t}\n\t\t\tif (key === \"inside\") {\n\t\t\t\t$.select(value).appendChild(element);\n\t\t\t} else if (key === \"innerHTML\") {\n\t\t\t\telement['textContent'] = value;\n\t\t\t} else {\n\t\t\t\telement.setAttribute(key, value);\n\t\t\t}\n\t\t}\n\t\treturn element;\n\t}\n}\n","import { getElementContentWidth, floatTwo, $ } from \"src/charts/utils\";\n\n/**\n * 分层的解耦思想\n * 数据层 (可以更换算法) -> 渲染层 (可以更换渲染方式)\n * 好处，方便兼容与替换，方便测试\n * 坏处，自制驱动引擎？动画\n */\n\n/** 图默认高度 */\nconst DEFAULT_HEIGHT = 240; \n\n/**\n * 根据最大最小值确定分度，原来代码这部分做得太啰嗦\n * 问题抽象，在已知最大值与最小值的情况下，不限制间隔与数量的情况下，如何让坐标轴刻度尽可能美观\n * G2 实现也很啰嗦 https://github.com/antvis/g2/blob/724872cee56d7e731b1d945444b7b10d4d0ef2e8/src/scale/auto/number.js\n * 想到一个 简单方法，最大值 - 最小值差值 / 4 向上取整数量级\n * @param maxValue\n * @param minValue\n */\nfunction calcIntervals(maxValue: number, minValue: number): number[] {\n  const ticks = [];\n  // 始终以 0 为基准，\n  const diff = minValue > 0 ? maxValue : maxValue - minValue;\n  const initInterval = diff / 6;\n  const exp = Math.floor(Math.log10(initInterval));\n  const finalInterval = Math.ceil(initInterval / Math.pow(10, exp)) * Math.pow(10, exp);\n\n  let downCount = 0;\n  while (0 - downCount * finalInterval >= minValue) {\n    ticks.unshift(0 - downCount * finalInterval);\n    downCount++;\n  }\n  if (minValue <= 0) {\n    ticks.unshift(0 - downCount * finalInterval);\n  }\n  let upCount = 0;\n  while (0 + upCount * finalInterval <= maxValue) {\n    if (!(ticks[ticks.length - 1] === 0 && 0 + upCount * finalInterval === 0)) {\n      ticks.push(0 + upCount * finalInterval);\n    }\n    upCount++;\n  }\n  if (maxValue >= 0) {\n    ticks.push(0 + upCount * finalInterval);\n  }\n\n  return ticks.reverse();\n}\n\n// console.log(calcIntervals(200, 20));\n// console.log(calcIntervals(-100, -1000));\n\ninterface Data {\n  labels: string[],\n  datasets: Array<{\n    title: string,\n    values: number[],\n  }>,\n}\n\ninterface BarChartConfig {\n  /** 外部容器 */\n  parent: string | Element;\n  /** 图表高度 */\n  height?: number;\n  /** 图表数据 */\n  data?: Data;\n  /** 颜色数据 */\n  colors: string[];\n}\n\ninterface XAxisUnit {\n  /** 柱状图开始点 */\n  startBarPos: number;\n  /** bar 宽度 */\n  barWidth: number;\n  /** 中心点 */\n  centerPos: number;\n  /** 处理后，超出 unit 区域 ... */\n  text: string;\n  /** 新-老的差值，中心点 */\n  diffCenterPos?: number;\n}\n\nclass XAxis {\n  /** 单元宽度 */\n  unitWidth: number;\n  /** 轴高度 */\n  axisHeight = 6;\n  /** x轴高度 */\n  height = 40;\n  /** 两侧空隙 */\n  padding = 80;\n  /** 每个单元的位置 */\n  unitList: XAxisUnit[] = [];\n}\n\nclass YAxisUnit {\n  /** 处理后，部分太大，科学计数法 */\n  text: string;\n  /** 竖直位置 */\n  pos: number;\n  /** 新-老的差值，竖直位置 */\n  diffPos?: number;\n}\n\nclass YAxis {\n  /** 分度值List */\n  ticks: number[] = [];\n  /** 起始位置，与 text 的长短有关 */\n  startPos: number;\n  /** 结束位置 */\n  endPos: number;\n  /** 每个单元的位置 */\n  unitList: YAxisUnit[] = [];\n  /** 零轴位置 */\n  zeroPos: number;\n  /** 每个长度代表的value */\n  valueInterval: number;\n}\n\ninterface DataPos {\n  value: number;\n  startX: number;\n  startY: number;\n  width: number;\n  height: number;\n  /** 新-老的差值，y 轴方向上 */\n  diff?: number;\n}\n\nclass BarChart {\n  xAxisGroup: SVGElement;\n  yAxisGroup: SVGElement;\n  svg: SVGElement;\n  chartWrapper: any;\n  container: HTMLElement;\n  data: Data;\n  config: BarChartConfig;\n  parent: Element;\n  /** 是否已存在值，已存在就要触发 animation */\n  isExist: boolean;\n  dataPos: DataPos[][];\n\n  width: number;\n  height: number;\n\n  xAxis: XAxis = new XAxis();\n  yAxis: YAxis = new YAxis();\n\n  constructor(config: BarChartConfig) {\n    this.config = config;\n    this.calculate();\n    this.isExist = true;\n    this.render();\n  }\n\n  /**\n   * 计算模块\n   */\n  calculate() {\n    this.getSize();\n    this.getAxis();\n    this.getValue();\n  }\n\n  /**\n   * 渲染模块\n   */\n  render() {\n    this.renderContainer();\n    this.renderAxis();\n    this.renderValue();\n  }\n\n  /**\n   * 更新模块\n   */\n  update(data: Data) {\n    // this.calculate();\n  }\n\n  /**\n   * 设置图表大小，可抽象为 Base\n   */\n  getSize() {\n    // 当前图表已存在，此部不需要再做\n    if (this.isExist) return;\n\n    if (typeof this.config.parent === 'string') {\n      this.parent = document.querySelector(this.config.parent);\n    } else {\n      this.parent = this.config.parent;\n    }\n    this.width = getElementContentWidth(this.parent);\n    this.height = this.config.height || DEFAULT_HEIGHT;\n  }\n\n  /**\n   * 设置坐标轴大小，可抽象为 Axis\n   */\n  getAxis() {\n    this.data = this.config.data;\n\n    // x 轴\n    this.xAxis.unitWidth = (this.width - this.xAxis.padding * 2) / this.data.labels.length;\n    const charWidth = 8;\n    const barWidth = this.xAxis.unitWidth * (2 / 3) / (this.data.datasets.length);\n    this.xAxis.unitList = this.data.labels.map((label, i) => {\n      // 需要考虑 label 过长的情况，获取字符串的长度\n      const labelWidth = label.length * charWidth;\n      const centerPos = floatTwo(i * this.xAxis.unitWidth + this.xAxis.padding + this.xAxis.unitWidth / 2);\n      return {\n        barWidth,\n        startBarPos: i * this.xAxis.unitWidth + this.xAxis.padding + this.xAxis.unitWidth * (1 / 3) / 2,\n        centerPos,\n        text: labelWidth > this.xAxis.unitWidth ? `${label.slice(0, this.xAxis.unitWidth / charWidth)}...` : label,\n        // 当前存在，则发生偏移，不存在的直接出现\n        // diffCenterPos: this.xAxis.unitList.length - 1 > i ? this.xAxis.unitList[i].centerPos - centerPos : 0,\n      };\n    });\n\n    // y 轴\n    // 合并所有 y 值，求解最大、最小值\n    const allValues = this.data.datasets.reduce((pre, dataset) => {\n      return [ ...pre, ...dataset.values ];\n    }, []);\n\n    const maxValue = Math.max(...allValues);\n    const minValue = Math.min(...allValues);\n\n    // padding 为 x 轴高度\n    const padding = this.xAxis.height;\n\n    const oldTicks = [...this.yAxis.ticks];\n    this.yAxis.ticks = calcIntervals(maxValue, minValue);\n    const heightInterval = (this.height - padding * 2) / (this.yAxis.ticks.length - 1);\n    this.yAxis.valueInterval = (this.height - padding * 2) / (this.yAxis.ticks[0] - this.yAxis.ticks[this.yAxis.ticks.length - 1]);\n\n    // 最大的开始位置\n    const statPosLimit = this.xAxis.padding;\n    const maxTick = Math.max(Math.abs(this.yAxis.ticks[0]), Math.abs(this.yAxis.ticks[this.yAxis.ticks.length - 1]));\n    const maxTickLength = String(maxTick).length * charWidth;\n    this.yAxis.startPos = (statPosLimit < maxTickLength ? statPosLimit : maxTickLength) + 10;\n    this.yAxis.endPos = this.width - this.yAxis.startPos * 2;\n\n    this.yAxis.unitList = this.yAxis.ticks.map((tick, index) => {\n      // @Todo 太长考虑用科学计数法代替\n      if (tick === 0) {\n        this.yAxis.zeroPos = padding + heightInterval * index;\n      }\n      return {\n        pos: padding + heightInterval * index,\n        text: String(tick),\n        // diffPos:\n      };\n    });    \n  }\n\n  /** 设置各个值在 x 轴与 y 轴的真实位置 */\n  getValue() {\n    this.dataPos = this.data.datasets.map((dataset, index) => {\n      const { values } = dataset;\n      return values.map((value, i) => {\n        const { barWidth, startBarPos } = this.xAxis.unitList[i];\n        const startX = startBarPos + barWidth * index;\n        const height = Math.abs(value) * this.yAxis.valueInterval;\n        if (value < 0) {\n          return {\n            value: value,\n            startX,\n            startY: this.yAxis.zeroPos,\n            width: barWidth,\n            height,\n          };\n        }\n        return {\n          value: value,\n          startX,\n          startY: this.yAxis.zeroPos - height,\n          width: barWidth,\n          height,\n        }\n      });\n    });\n  }\n\n  /** 渲染外容器 */\n  renderContainer() {\n    this.container = $.create('div', {\n      className: 'chart-container',\n      innerHTML: `<div class=\"frappe-chart graphics\"></div>`,\n    });\n    this.parent.innerHTML = '';\n    this.parent.appendChild(this.container);\n\n    this.chartWrapper = this.container.querySelector('.frappe-chart');\n\n    this.svg = $.createSVG('svg', {\n      className: 'chart',\n      inside: this.chartWrapper,\n      width: this.width,\n      height: this.height,\n    });\n  }\n\n  /** 渲染坐标 */\n  renderAxis() {\n    // 渲染 y 轴坐标\n    this.yAxisGroup = $.createSVG('g', {\n      className: 'y-axis',\n      inside: this.svg,\n    });\n\n    this.yAxis.unitList.forEach((unit, index) => {\n      const { pos, text } = unit;\n\n      const yAxisTick = $.createSVG('g', {\n        className: 'y-axis-tick',\n        inside: this.yAxisGroup,\n        transform: `translate(0, ${pos})`,\n      });\n\n      const yAxisLine = $.createSVG('line', {\n        className: text === '0' ? 'y-axis-line y-axis-line-zero' : 'y-axis-line',\n        x1: this.yAxis.startPos,\n        x2: this.yAxis.endPos,\n        y1: 0,\n        y2: 0\n      });\n\n      const yAxisText = $.createSVG('text', {\n        className: 'y-axis-text',\n        x: this.yAxis.startPos - 6,\n        y: 0,\n        dy: '.32em',\n        innerHTML: text,\n      });\n\n      yAxisTick.appendChild(yAxisLine);\n      yAxisTick.appendChild(yAxisText);\n    });\n\n    // 渲染 x 轴坐标\n    this.xAxisGroup = $.createSVG('g', {\n      className: 'x-axis',\n      inside: this.svg,\n      transform: `translate(0, ${this.height - this.xAxis.height})`,\n    });\n\n    this.xAxis.unitList.forEach((unit, index) => {\n      const { centerPos, text } = unit;\n\n      const xAxisTick = $.createSVG('g', {\n        className: 'x-axis-tick',\n        inside: this.xAxisGroup,\n        transform: `translate(${centerPos}, 0)`,\n      });\n      const xAxisLine = $.createSVG('line', {\n        className: 'x-axis-line',\n        x1: 0,\n        x2: 0,\n        y1: 0,\n        y2: this.xAxis.axisHeight,\n      });\n      const xAxisText = $.createSVG('text', {\n        className: 'x-axis-text',\n        innerHTML: text,\n        x: 0,\n        dy: '.9em',\n        y: this.xAxis.axisHeight,\n      });\n\n      xAxisTick.appendChild(xAxisLine);\n      xAxisTick.appendChild(xAxisText);\n    });    \n  }\n\n  renderValue() {\n    this.dataPos.forEach((data, index) => {\n      const color = this.config.colors[index];\n      const dataG = $.createSVG('g', {\n        className: 'data-points',\n        inside: this.svg,\n      });\n      data.forEach(pos => {\n        const { value, startX, startY, width, height } = pos;\n        const dataRect = $.createSVG('rect', {\n          className: 'bar',\n          x: startX,\n          y: startY,\n          width,\n          height,\n          fill: color,\n        });\n\n        dataG.appendChild(dataRect);\n      });\n    });\n  }\n}\n\nexport default BarChart;\n\n","/**\n * 创建一个 SVG 元素\n * @param tag 标签名\n * @param o 对象\n */\nexport function createSVG(tag: string, options: any) {\n  const element = document.createElementNS(\"http://www.w3.org/2000/svg\", tag);\n\n  for (let key in options) {\n    if (options.hasOwnProperty(key)) {\n      const val = options[key];\n      if (key === 'inside') {\n        val.appendChild(element);\n      } else if (key === 'styles') {\n        if (typeof val === 'object') {\n          Object.keys(val).map((prop: string) => {\n            (element.style as any)[prop] = val[prop];\n          });\n        }\n      } else {\n        if (key === 'className') {\n          key = 'class'; // 兼容 react 中的 className\n        } else if (key === 'innerHTML') {\n          element['textContent'] = val;\n        } else {\n          // 设置属性，最重要的一行\n          element.setAttribute(key, val);\n        }\n      }\n    }\n  }\n\n  return element;\n}\n\n/**\n * 创建 path\n */\nexport function makePath(pathStr: string, className='', stroke = 'none', fill = 'none') {\n  return createSVG('path', {\n    className,\n    d: pathStr,\n    styles: {\n      stroke,\n      fill\n    }\n  })\n}\n\n/**\n * 绘制一条 X 轴的线\n * @param height 高度\n * @param textStartAt 文字的Y坐标\n * @param point 坐标轴文字内容\n * @param labelClass 坐标轴文字样式\n * @param axisLineClass 坐标轴样式\n * @param xPos 线的X坐标\n */\nexport function makeXLine(height: number, textStartAt: number, point: any, labelClass: string, axisLineClass: string, xPos: number) {\n  const line = createSVG('line', {\n    x1: 0,\n    x2: 0,\n    y1: 0,\n    y2: height,\n    stroke: '#dadada',\n  });\n  const text = createSVG('text', {\n    className: labelClass,\n    x: 0,\n    y: textStartAt,\n    dy: '.71em', // 文字向下稍微偏移\n    innerHTML: point,\n    'text-anchor': 'middle',\n    'font-size': '11px'\n  });\n  const xLine = createSVG('g', {\n    className: `tick ${axisLineClass}`,\n    transform: `translate(${xPos} 0)` // 平移\n  });\n  xLine.appendChild(line);\n  xLine.appendChild(text);\n  return xLine;\n}\n\n\n/**\n * 绘制一条 Y 轴的线\n * @param startAt 左侧留白宽度\n * @param width 高度\n * @param textEndAt 文字的X坐标\n * @param point 坐标轴文字内容\n * @param labelClass 坐标轴文字样式\n * @param axisLineClass 坐标轴样式\n * @param yPos 线的Y坐标\n */\nexport function makeYLine(startAt: number, width: number, textEndAt: number, point: any, labelClass: string, axisLineClass: string, yPos: number) {\n  const line = createSVG('line', {\n    x1: startAt,\n    x2: width,\n    y1: 0,\n    y2: 0,\n    stroke: '#dadada',\n  });\n  const text = createSVG('text', {\n    className: labelClass,\n    x: textEndAt,\n    y: 0,\n    dy: '.32em', // 文字向下稍微偏移\n    innerHTML: point,\n    'text-anchor': 'end',\n    'font-size': '11px'\n  });\n  const yLine = createSVG('g', {\n    className: `tick ${axisLineClass}`,\n    transform: `translate(0 ${yPos})` // 平移\n  });\n  yLine.appendChild(line);\n  yLine.appendChild(text);\n  return yLine;\n}\n","/**\n * 散点图，将所有的数据以点的形式展现在笛卡尔坐标系上。可以通过x轴，y轴，透明度，圆大小来展示4个维度的数据。\n * 我们可以推断出变量间的相关性。\n */\nimport { getElementContentWidth, floatTwo } from \"src/charts/utils\";\nimport { makePath, makeXLine, makeYLine, createSVG } from \"src/draw\";\n\nconst DEFAULT_HEIGHT = 240;\n\n/**\n * 根据最大最小值确定分度，原来代码这部分做得太啰嗦\n * 问题抽象，在已知最大值与最小值的情况下，不限制间隔与数量的情况下，如何让坐标轴刻度尽可能美观\n * G2 实现也很啰嗦 https://github.com/antvis/g2/blob/724872cee56d7e731b1d945444b7b10d4d0ef2e8/src/scale/auto/number.js\n * 想到一个 简单方法，最大值 - 最小值差值 / 4 向上取整数量级\n * @param maxValue\n * @param minValue\n */\nfunction calcIntervals(maxValue: number, minValue: number): number[] {\n  const ticks = [];\n  // 始终以 0 为基准，\n  const diff = minValue > 0 ? maxValue : maxValue - minValue;\n  const initInterval = diff / 5;\n  const exp = Math.floor(Math.log10(initInterval));\n  const finalInterval = Math.ceil(initInterval / Math.pow(10, exp)) * Math.pow(10, exp);\n\n  let downCount = 0;\n  while (0 - downCount * finalInterval >= minValue) {\n    ticks.unshift(0 - downCount * finalInterval);\n    downCount++;\n  }\n  if (minValue <= 0) {\n    ticks.unshift(0 - downCount * finalInterval);\n  }\n  let upCount = 0;\n  while (0 + upCount * finalInterval <= maxValue) {\n    if (!(ticks[ticks.length - 1] === 0 && 0 + upCount * finalInterval === 0)) {\n      ticks.push(0 + upCount * finalInterval);\n    }\n    upCount++;\n  }\n  if (maxValue >= 0) {\n    ticks.push(0 + upCount * finalInterval);\n  }\n\n  return ticks;\n}\n/** 传一组数组直接返回恰当的分隔点 */\nfunction calcIntervalsOfArray(data: number[]): number[] {\n  const max = Math.max(...data);\n  const min = Math.min(...data);\n\n  return calcIntervals(max, min);\n}\n\n// console.log(calcIntervals(100, 1));\n// console.log(calcIntervals(-100, -1000));\n\ninterface Data {\n  datasets: Array<{\n    title: string,\n    values: number[],\n  }>,\n}\n\ninterface ScatterConfig {\n  /** 外部容器 */\n  parent: string | Element;\n  /** 图表高度 */\n  height?: number;\n  /** 模式，依次对应 x轴，y轴，透明度，圆大小 */\n  pattern: string[];\n  /** 图表数据 */\n  data?: Data;\n}\n\nclass XAxis {\n  /** 分度值 */\n  ticks: number[];\n}\n\nclass YAxis {\n  /** 分度值 */\n  ticks: number[];\n}\n\nclass ScatterChart {\n  /** 用户数据 */\n  data: Data;\n  /** 用户配置 */\n  config: ScatterConfig;\n  parent: Element;\n\n  width: number;\n  height: number;\n\n  xAxis = new XAxis();\n  yAxis = new YAxis();\n\n  constructor(config: ScatterConfig) {\n    this.config = config;\n    this.data = this.config.data;\n    this.calculate();\n    this.render();\n  }\n\n  /**\n   * 计算模块\n   */\n  calculate() {\n    this.getSize();\n    this.getAxis();\n  }\n\n  /**\n   * 设置图表大小，可抽象为 Base\n   */\n  getSize() {\n    if (typeof this.config.parent === 'string') {\n      this.parent = document.querySelector(this.config.parent);\n    } else {\n      this.parent = this.config.parent;\n    }\n    this.width = getElementContentWidth(this.parent);\n    this.height = DEFAULT_HEIGHT;\n  }\n\n  /**\n   * 设置坐标轴大小，可抽象为 Axis\n   */\n  getAxis() {\n    // y 轴\n    this.xAxis.ticks = calcIntervalsOfArray(this.data.datasets[0].values);\n    this.yAxis.ticks = calcIntervalsOfArray(this.data.datasets[1].values);\n  }\n\n  /**\n   * 渲染模块\n   */\n  render() {\n    console.log('rendering');\n    console.log('xAxis', this.xAxis);\n    console.log('yAxis', this.yAxis);\n    console.log(this.data);\n\n    // 转换数据为易处理的格式\n    const transformedData: any[] = [];\n    this.data.datasets.forEach(o => {\n      o.values.forEach((entry, index) => {\n        if (transformedData[index] == null) { transformedData[index] = {};}\n        transformedData[index][o.title] = entry;\n        const max = Math.max(...o.values);\n        const min = Math.min(...o.values);\n        const percent = max > min ? (entry - min) / (max - min) : 0;\n        console.log('max min', min, max, entry, percent);\n\n        // 得到数据的比例\n        transformedData[index][o.title + 'Percent'] = percent;\n      })\n    });\n\n    const contentWidth = this.width - 60;\n    const contentHeight = this.height - 20;\n\n    // 开始画X坐标轴\n    const xAxisGroup = createSVG('g', {\n      className: 'x axis',\n      transform: `translate(0, -7)`\n    });\n    this.xAxis.ticks.forEach((val: number, index: number) => {\n      const xPosUnit = (contentWidth - 30) / (this.xAxis.ticks.length - 1)\n      const xLine = makeXLine(contentHeight - 20, contentHeight - 10, val, '', '', index * xPosUnit);\n      xAxisGroup.appendChild(xLine);\n    });\n\n    // 开始画Y坐标轴\n    const yAxisGroup = createSVG('g', {\n      className: 'y axis',\n    });\n    this.yAxis.ticks.forEach((val: number, index: number) => {\n      const yPosUnit = (contentHeight - 35) / (this.yAxis.ticks.length - 1)\n      const yLine = makeYLine(-7, contentWidth - 25, -10, val, '', '', yPosUnit * (this.yAxis.ticks.length - index - 1))\n      yAxisGroup.appendChild(yLine);\n    });\n\n    // 画散点图中的数据点\n    const dataPoints = createSVG('g', {\n      className: 'data-points'\n    });\n    const pattern = this.config.pattern;\n    transformedData.forEach(data => {\n      const circle = createSVG('circle', {\n        cx: data[pattern[0] + 'Percent'] * (contentWidth - 30),\n        cy: data[pattern[1] + 'Percent'] * (contentHeight - 35),\n        r: 5,\n        fill: 'red',\n        opacity: data[pattern[2] + 'Percent'],\n      });\n      dataPoints.appendChild(circle);\n    })\n\n    // 添加画布\n    const svg = createSVG('svg', {\n      className: 'chart',\n      width: this.width,\n      height: this.height,\n    })\n    const chartContent = createSVG('g', {\n      className: 'scatter-chart',\n      transform: 'translate(60, 10)'\n    })\n    chartContent.appendChild(xAxisGroup);\n    chartContent.appendChild(yAxisGroup);\n    chartContent.appendChild(dataPoints);\n    svg.appendChild(chartContent);\n\n    this.parent.appendChild(svg);\n  }\n}\n\nexport default ScatterChart;\n","/**\n * @file Base chart\n */\nimport { Iargs } from '../index.d';\nimport { createSVG } from './utils/draw';\nimport { createDrawAreaComponent } from './utils/draw';\n\nclass BaseChart {\n  public options:Iargs;  \n  public optionsData:OptionData;\n  public args: Iargs;\n  public title: string;\n  public subTitle: string;\n  public type: 'line' | 'pie' | 'bar' | 'scatter' | 'percentage';\n  public parent: HTMLElement;\n  public chartWrapper: HTMLElement;\n  public chartWidth: number;\n  public chartHeight: number;\n  public svg: SVGElement;\n  public svgDefs: SVGElement;\n  public drawArea: SVGElement;\n  public translateX: number;\n  public translateY: number;\n  constructor(args: Iargs) {\n    this.options = args;\n    this.optionsData = args.data;\n    this.args = args; \n    if (this.options.type!=='pie') {\n      this.setup();\n    }\n  }\n  setup() {\n    this.getValues();\n    this.setMargins();\n    this.initContainer();\n\n    this.initChartArea();\n    this.initDrawArea();\n  }\n  getValues() {\n    const { title, subTitle, parent, height, type } = this.args;\n    this.title = title || '';\n    this.subTitle = subTitle || '';\n    this.parent = typeof parent === 'string' ? document.querySelector(parent) : parent;\n    this.chartWidth = this.parent.getBoundingClientRect().width\n    this.chartHeight = height;\n    this.type = type;\n  }\n  initContainer() {\n    const containerHtml = `<div className=\"chart-container\">\n      <h6 class=\"title\">${this.title}</h6>\n      <h6 class=\"sub-title uppercase\">${this.subTitle}</h6>\n      <div class=\"taco-chart graphics\"></div>\n    </div>`\n    this.parent.innerHTML = containerHtml;\n    this.chartWrapper = this.parent.querySelector('.taco-chart');\n  }\n  setMargins() {\n    this.translateX = 60;\n    this.translateY = 10;\n  }\n  initChartArea() {\n    this.svg = createSVG('svg', {\n      className: 'chart',\n      inside: this.chartWrapper,\n      width: this.chartWidth,\n      height: this.chartHeight\n    });\n    this.svgDefs = createSVG('defs', {\n      inside: this.svg,\n    });\n  }\n  initDrawArea() {\n    this.drawArea = createSVG('g', {\n      className: `${this.type}-chart`,\n      inside: this.svg,\n      transform: `translate(${this.translateX}, ${this.translateY})`\n    });\n  }\n}\n\nexport { BaseChart };\n","/**\n * @file Pie chart\n * @author mickle.zy\n */\nimport { Iargs } from '../index.d';\nimport { BaseChart } from 'src/charts/baseChart';\nimport { getElementContentWidth } from 'src/charts/utils';\nconst SVG_NS = 'http://www.w3.org/2000/svg';\n\nclass Pie extends BaseChart {\n  centerPoint: number[];\n  chartDom: SVGElement;\n  /** 开始角度 */\n  beginAngel = 90;\n\n  /** 半径 根据容器自动设置半径*/\n  r = 30;\n\n  width = 300;\n\n  height = 300;\n\n  /**\n   * 构造器\n   * @param args\n   */\n  constructor(args: Iargs) {\n    super(args);\n    /**\n     * 圆心 , TODO 使用父容器的中心点\n     */\n    this.centerPoint = [150, 150];\n\n    /** 开始角度 */\n    this.beginAngel = 90;\n\n    /** 半径 根据容器自动设置半径*/\n    this.r = 100;\n\n    this.width = 300;\n\n    this.height = 300;\n\n    this.init();\n  }\n\n  init(): any {\n    console.log('init Pie');\n    const containerEle = this.options.parent as HTMLElement;\n    // this.centerPoint = [containerEle.clientWidth/2, containerEle.clientHeight/2];\n\n    // 获取总共数量\n    const allCount = this.getAllCount();\n\n    // 计算比例(计算出来度数)\n    const scales = this.getScales(allCount);\n\n    // 获取所有路径集合\n    const allPathPoints = this.getAllPathPoints(scales);\n\n    // 开始渲染\n    this.render(allPathPoints);\n  }\n\n  /**\n   * 初始化\n   */\n  initContainer() {\n    //\n  }\n\n  /**\n   * 获取所有路径的path点集合\n   * 参考 https://developer.mozilla.org/zh-CN/docs/Web/SVG/Tutorial/Paths\n   * @param scales 比例\n   */\n  getAllPathPoints(scales: number[]): any {\n    const allPathPoints: string[] = [];\n    // x1 , y1 第一个焦点\n    let x1 = 0;\n    let y1 = this.r;\n\n    // x2 , y2 第二个焦点\n    let x2 = 0;\n    let y2 = this.r;\n\n    let startAngle = this.beginAngel;\n    let endangle = this.beginAngel;\n    let largeFlag = 0; // 度数超过 180 度， 置为1;\n\n    scales.forEach((scale, index) => {\n      endangle = startAngle + scale * Math.PI * 2;\n      if (endangle - startAngle > Math.PI) largeFlag = 1;\n      var x1 = this.centerPoint[0] + this.r * Math.sin(startAngle);\n      var y1 = this.centerPoint[1] - this.r * Math.cos(startAngle);\n      var x2 = this.centerPoint[0] + this.r * Math.sin(endangle);\n      var y2 = this.centerPoint[1] - this.r * Math.cos(endangle);\n\n      const hoverDiff = index === 3 ? -15 : 0;\n      // A rx ry x-axis-rotation large-arc-flag sweep-flag x y\n      const path = `M${this.centerPoint[0] + hoverDiff} ${this.centerPoint[1] + hoverDiff}\n      L ${x1 + hoverDiff} ${y1 + hoverDiff}\n      A ${this.r} ${this.r}\n      0 ${largeFlag} 1 ${x2 + hoverDiff} ${y2 + hoverDiff}\n      Z`;\n      startAngle = endangle;\n      allPathPoints.push(path);\n    });\n\n    return allPathPoints;\n  }\n\n  /**\n   * 获取总数量\n   */\n  getAllCount(): any {\n    const all = 0;\n    const values = this.optionsData.datasets[0].values;\n    return values.reduce((pre, cur) => pre + cur);\n  }\n\n  /**\n   * 计算比例\n   */\n  getScales(allCount: number): any {\n    const values = this.optionsData.datasets[0].values;\n    return values.map(v => v / allCount);\n  }\n\n  /**\n   * 渲染扇形\n   */\n  renderSector(points: string, index: number): any {\n    this.drawPath(points, index);\n  }\n\n  /**\n   * 开始渲染\n   */\n  render(allPathPoints: string[]): any {\n    this.drawDomContainer();\n    allPathPoints.forEach((points, index) => {\n      this.renderSector(points, index);\n    });\n    (this.options.parent as HTMLElement).appendChild(this.chartDom);\n  }\n\n  /**\n   * 画容器\n   */\n  drawDomContainer(): any {\n    let chart = document.createElementNS(SVG_NS, 'svg:svg');\n    chart.setAttribute('width', this.width + '');\n    chart.setAttribute('height', this.height + '');\n    chart.setAttribute('viewBox', '0 0 ' + this.width + ' ' + this.height);\n    this.chartDom = chart;\n  }\n\n  /**\n   * 画路径\n   */\n  drawPath(points: string, index: number): any {\n    var path = document.createElementNS(SVG_NS, 'path');\n    path.setAttribute('d', points); //设置路径\n    path.setAttribute('fill', this.options.colors[index]); //设置填充颜色\n    path.setAttribute('stroke', this.options.colors[index]); //楔的外边框为黑色\n    path.setAttribute('stroke-width', '1'); //两个单位\n    this.chartDom.appendChild(path);\n  }\n}\n\nexport { Pie };\n","import Chart from './index';\nimport BarChart from './charts/Bar';\nimport ScatterChart from './charts/Scatter';\nimport {Pie} from 'src/charts/Pie';\n\nconst data = {\n  labels: [\n    '12am-3am',\n    '3am-6pm',\n    '6am-9am',\n    '9am-12am',\n    '12pm-3pm',\n    '3pm-6pm',\n    '6pm-9pm',\n    '9am-12am'\n  ],\n  datasets: [\n    {\n      title: 'Some Data',\n      values: [12, 40, 30, 35, 8, 52, 17, -4]\n    },\n    {\n      title: 'Another Set',\n      values: [25, 50, -10, 15, 18, 32, 27, 14]\n    },\n    {\n      title: \"Yet Another\",\n      values: [15, 20, -3, -15, 58, 12, -17, 37]\n    }\n  ]\n};\n\nconst lineChart = new Chart({\n  parent: 'line',\n  title: 'My Chart',\n  data: data,\n  type: 'line', // or 'line', 'scatter', 'pie', 'percentage'\n  height: 250,\n  colors: ['#7cd6fd', 'violet', 'blue']\n});\n\nconst chart = new BarChart({\n  parent: document.getElementById('barchart'),\n  height: 300,\n  colors: ['#7cd6fd', '#743ee2', '#5e64ff'],\n  data,\n});\n\n\nconst scatterData = {\n  datasets: [\n    {\n      title: 'size',\n      values: [10, 2, 3, 4, 3, 2, 8]\n    },\n    {\n      title: 'year',\n      values: [30, 300, 232.23, 422, 322, 423, 283]\n    },\n    {\n      title: \"price\",\n      values: [1000, 5000, 2000, 3000, 3230, 4829, 3990]\n    }\n  ]\n}\n\nnew ScatterChart({\n  parent: document.getElementById('scatter-chart'),\n  height: 250,\n  pattern: ['size', 'year', 'price'],\n  data: scatterData,\n});\n\n\nnew Pie({\n  parent: document.getElementById('pie-chart'),\n  title: 'My Pie Chart',\n  data: data,\n  type: 'pie',\n  height: 250,\n  colors: ['#7cd6fd', '#743ee2', 'red', 'blue', 'pink', 'grey', 'yellow']\n});\n\n\n"],"names":["$","createSVG","DEFAULT_HEIGHT","calcIntervals","XAxis","YAxis","makeXLine","makeYLine","BaseChart"],"mappings":"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"}